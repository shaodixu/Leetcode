class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if max(nums) <= 0:
            return max(nums)
        
        local = 0
        res = 0
        
        for num in nums:
            
            local = max(0, local + num)   #try to calculate which is the best ending at i
            res = max(local, res)
            
        return res



class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        
        vector<int> f(nums.size());
        f[0] = nums[0];
        for(int i = 0; i < nums.size(); i++){
            f[i] = max(f[i-1] + nums[i], nums[i]);
        }
        return *std::max_element(f.begin(), f.end());
        
        
        
    }
};
