class Solution(object):
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        
        fin = []
        if(len(matrix) == 0):
            return []
        rStart = 0
        rEnd = len(matrix)-1
        cStart = 0
        cEnd = len(matrix[0])-1
        while(rStart <= rEnd and cStart <= cEnd):
            for j in range(cStart, cEnd+1):
                fin.append(matrix[rStart][j])
            rStart+=1

            for k in range(rStart, rEnd+1):
                fin.append(matrix[k][cEnd])
            cEnd-=1

            if(rStart > rEnd or cStart > cEnd):
                break

            for n in range(cEnd, cStart-1, -1):
                fin.append(matrix[rEnd][n])
            rEnd-=1
            for m in range(rEnd, rStart-1, -1):
                fin.append(matrix[m][cStart])
            cStart+=1
        return fin





class Solution:
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        if len(matrix) == 0:
            return []
        res = []
        top = 0
        bottom = len(matrix) -1
        left = 0
        right = len(matrix[0]) - 1
        
        while top < bottom and left < right:
            for i in range(left, right):
                res.append(matrix[top][i])
            for i in range(top, bottom):
                res.append(matrix[i][right])
            for i in range(right, left, -1):
                res.append(matrix[bottom][i])
            for i in range(bottom, top, -1):
                res.append(matrix[i][left])
            
            
            top += 1
            bottom -= 1
            left += 1
            right -= 1
        
        if left == right:
            for i in range(top, bottom+1):
                res.append(matrix[i][left])
        elif top == bottom:
            for i in range(left, right+1):
                res.append(matrix[top][i])
        return res
