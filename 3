class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        tempDict = {}
        maxLen = 0
        pointer = 0
        for index, value in enumerate(s):
            if value in tempDict:
                pointer = max(tempDict[value]+1, pointer)
            maxLen = max(index-pointer+1, maxLen)
            tempDict[value] = index
        return maxLen


class Solution:
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        j = 0
        dic = {}
        res = 0
        for i, num in enumerate(s):
            if num in dic:
                j = max(j, dic[num] + 1)          
            res = max(res, i - j + 1)         
            dic[num] = i
        return res
