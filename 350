class Solution(object):
    def intersect(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """
        nums1.sort()
        nums2.sort()
        i, j =0, 0
        res = []
        while i< len(nums1) and j< len(nums2):
            if nums1[i] == nums2[j]:
                res.append(nums1[i])
                i += 1
                j += 1
            elif nums1[i] > nums2[j]:
                j += 1
            else:
                i += 1
        return res  




class Solution:
    def intersect(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """
        
    
    
    
#         res = []
#         map = {}
#         for i in nums1:
#             map[i] = map[i]+1 if i in map else 1
#         for j in nums2:
#             if j in map and map[j] > 0:
#                 res.append(j)
#                 map[j] -= 1

#         return res
    
        
        result = []
        a = {}
        for i in nums1:
            if i not in a:
                a[i] = 1
            else:
                a[i] += 1
        
        for num in nums2:
            if num in a:
                a[num] -= 1
                if a[num] >=0:
                    result.append(num)
        return result




class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        map<int, int> record;
        for(int i = 0; i < nums1.size(); i++)
            record[nums1[i]]++;
        vector<int> resultVector;
        
        for(int i = 0; i < nums2.size(); i++)
            if(record[nums2[i]] > 0){
                resultVector.push_back(nums2[i]);
                record[nums2[i]]--;
            }
        return resultVector;
                
    }
};
