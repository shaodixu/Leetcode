class Solution(object):
    def lengthOfLIS(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        tails = [None]*len(nums)
        res = 0
        for num in nums:
            i = 0
            j = res
            while i != j:
                mid = (i + j)/2
                if tails[mid] < num:
                    i = mid + 1
                else:
                    j = mid
            tails[i] = num
            if i == res:
                res += 1
        return res



class Solution:
    def lengthOfLIS(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
       
        
        if(nums is None or len(nums) == 0):
            return 0
      
        cache = [1] * len(nums)
        
        max_num = 1
        
        for i in range(1, len(nums)):
            for j in range(0, i):
                if(nums[j] < nums[i]):
                    cache[i] = max(cache[j]+1, cache[i])
                    #max_num = max(max_num, cache[i])
                
        return max(cache)
    
