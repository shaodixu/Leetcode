class Solution {
public:
    int findLengthOfLCIS(vector<int>& nums) {
        int result = 0, count = 0;
        for (int i = 0; i < nums.size(); ++i){
            if (i == 0 || nums[i - 1] < nums[i]){
                result = max(result, ++count);
            } else{
                count = 1;
            }
        }
        return result;
    }
};




class Solution:
    def findLengthOfLCIS(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        # result, count = 0, 0
        # for i in range(len(nums)):
        #     if i == 0 or nums[i-1] < nums[i]:
        #         count += 1
        #         result = max(result, count)
        #     else:
        #         count = 1
        # return result
        if len(nums) == 0:
            return 0
        if len(nums) == 1:
            return 1
        
        
        local = 1
        glo = 1
        for i in range(1, len(nums)):
            
            if nums[i] - nums[i-1] > 0:
                local += 1
                glo = max(glo, local)
            elif nums[i] - nums[i-1] <= 0:
                local = 1
        return glo
        
    
