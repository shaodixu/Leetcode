class Solution(object):
    def maxArea(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        max_area, i, j = 0, 0, len(height) - 1
        while i < j:
            max_area = max(max_area, min(height[i], height[j]) * (j - i))
            if height[i] < height[j]:
                i += 1
            else:
                j -= 1
        return max_area



class Solution {
public:
    int maxArea(vector<int>& height) {
        int i = 0, j = height.size() - 1, max_area = 0;
        while (i<j){
            max_area = max(max_area, min(height[i], height[j])*(j - i));
            if (height[i] > height[j]){
                --j;
            }else if (height[i]< height[j]){
                ++i;
            }else {
                ++i;
                --j;
            }
        }
        return max_area;
    }
};



class Solution {
public:
    int maxArea(vector<int>& height) {
        
        int area = 0;
        for(int i = 0; i < height.size(); i++){
            for(int j = i+1; j < height.size(); j++)
                area = max(area, min(height[i],height[j])*(j-i));
        }
        return area;
        
    }
};
