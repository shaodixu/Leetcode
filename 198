class Solution(object):
    def rob(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        rob = 0
        notRob = 0
        for num in nums:
            pre = max(notRob, rob)
            rob = notRob + num
            notRob = pre
        return max(rob, notRob)



class Solution:
    def rob(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        n = len(nums)
        if n == 0:
            return 0
        memo = [-1 for i in range(n)]
        memo[n-1] = nums[n-1]
        
        for i in reversed(range(n-1)):
            for j in range(i, n):
                memo[i] = max(memo[i], nums[j] + (memo[j+2] if j+2<n else 0))
        return memo[0]
            
