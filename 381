from collections import defaultdict
from random import *
class RandomizedCollection(object):

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.hash = defaultdict(set)
        self.nums = []
        

    def insert(self, val):
        """
        Inserts a value to the collection. Returns true if the collection did not already contain the specified element.
        :type val: int
        :rtype: bool
        """
        self.hash[val].add(len(self.nums))
        self.nums.append(val)
        return len(self.hash[val]) == 1
        

    def remove(self, val):
        """
        Removes a value from the collection. Returns true if the collection contained the specified element.
        :type val: int
        :rtype: bool
        """
        if self.hash[val]:
            pos = self.hash[val].pop()
            last = self.nums[-1]
            self.nums[pos] = last
            # if self.hash[last]:
            self.hash[last].add(pos)
            self.hash[last].remove(len(self.nums) - 1)
            self.nums.pop()
            return True
        return False
        

    def getRandom(self):
        """
        Get a random element from the collection.
        :rtype: int
        """
        return choice(self.nums)

# Your RandomizedCollection object will be instantiated and called as such:
# obj = RandomizedCollection()
# param_1 = obj.insert(val)
# param_2 = obj.remove(val)
# param_3 = obj.getRandom()
