# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def levelOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """

        res = []
        
        def preorder(root,level):
            if not root:return 
            if len(res)<level+1: res.append([])
            res[level].append(root.val)
            preorder(root.left,level+1)
            preorder(root.right,level+1)
        preorder(root,0)
        return res
    
    
'''    

class Solution(object):
    def levelOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        res = []
        if root is None:
            return res
        
        q = []
        q.append(root)
        
        while len(q) != 0:
            new_q = []
            res.append([node.val for node in q])
            for node in q:
                
                if node.left:
                    new_q.append(node.left)
                if node.right:
                    new_q.append(node.right)
            q = new_q
        return res   
        
        
'''
