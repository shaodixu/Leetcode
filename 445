# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        s1=[]
        s2=[]
        while l1:
            s1.append(l1)
            l1=l1.next
        while l2:
            s2.append(l2)
            l2=l2.next
        curr = ListNode(0)
        sumVal=0
        while s1 or s2:
            if s1:
                sumVal+=s1.pop().val
            if s2:
                sumVal+=s2.pop().val
            curr.val=sumVal%10
            prev=ListNode(sumVal//10)
            prev.next=curr
            curr=prev
            sumVal //=10
        if curr.val==0:
            return curr.next
        else:
            return curr
