class Solution(object):
    def evalRPN(self, tokens):
        """
        :type tokens: List[str]
        :rtype: int
        """
        
        
        stack = []
        
        for token in tokens:
            if token in "+-*/":
                a = stack.pop()
                b = stack.pop()
                if token == '+':
                    stack.append(a+b)
                elif token == '-':
                    stack.append(b-a)
                elif token == '*':
                    stack.append(a*b)
                else:
                    if a*b < 0 and b % a != 0:
                        stack.append(b/a+1)
                    else:
                        stack.append(b/a)
            else:
                stack.append(string.atoi(token))
        
        return stack[0]


class Solution {
public:
    int evalRPN(vector<string>& tokens) {
        stack<int> stack;
        for (int i = 0; i < tokens.size(); i++){
            if (tokens[i] != "+" && tokens[i] != "-" && tokens[i] != "*" && tokens[i] != "/")
                stack.push(atoi(tokens[i].c_str()));
            else{
                int a = stack.top();
                stack.pop();
                
                int b = stack.top();
                stack.pop();
                
                if(tokens[i] == "+")
                    stack.push(b + a);
                else if(tokens[i] == "-")
                    stack.push(b - a);
                else if(tokens[i] == "*")
                    stack.push(b * a);
                else if(tokens[i] == "/")
                    stack.push(b / a);
                
                
            }
        }
        return stack.top();
        
    }
};
