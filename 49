class Solution(object):
    def groupAnagrams(self, strs):
        """
        :type strs: List[str]
        :rtype: List[List[str]]
        """
        ans = []
        res = {}
        ret = []
        for s in strs:
            s = list(s)
            s.sort()
            ans.append("".join(s))
        for i in range(len(ans)):
            if ans[i] not in res:
                res[ans[i]] = []
            res[ans[i]].append(strs[i])
        for key in res:
            ret.append(res[key])
        return ret
                


class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        unordered_map<string, vector<string>>map;
        for(const string &s:strs){
            string key = s;
            sort(key.begin(), key.end());
            map[key].push_back(s);
            
        }
        vector<vector<string>>res;
        for(const auto& p:map){
            res.push_back(p.second);
        
        }
        return res;
        
    }
};
