# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

#class Solution(object):
#    def deleteDuplicates(self, head):
#        """
 ##       :type head: ListNode
 #       :rtype: ListNode
 #       """
 #       cur = head
 #       while cur and cur.next:
 #           if cur.val == cur.next.val:
  #              cur.next = cur.next.next
 #           else:
 #               cur = cur.next
 #       return head


def deleteDuplicates(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if head == None:
            return None
        
        dummy = head
        
        while  dummy.next != None:
            
            if dummy.val == dummy.next.val:
                dummy.next = dummy.next.next
            else:
                dummy = dummy.next
        return head
