class Solution(object):
    def combinationSum2(self, nums, target):
        """
        :type candidates: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
        nums.sort()
        self.res = []
        def dfs(nums, temp, remainder, index):
            if remainder == 0:
                self.res.append(temp[:])
                return 
            if remainder < 0:
                return 
            for i in range(index, len(nums)):
                if i != index and nums[i] == nums[i-1]:continue
                temp.append(nums[i])
                dfs(nums, temp, remainder-nums[i], i+1)
                temp.pop()
        dfs(nums, [], target, 0)
        return self.res
