class Solution(object):
    def countAndSay(self, n):
        """
        :type n: int
        :rtype: str
        """
        string = '1'
        for i in range(n-1):
            string = self.getNext(string)
        return string
    
    def getNext(self, string):
        i = 0
        nextStr = ""
        while i < len(string):          
            cnt = 1
            while i < len(string) -1 and string[i] == string[i+1]:   # the order of these two conditions can not change.
                cnt += 1
                i += 1
            nextStr += str(cnt) + string[i]
            i +=1
        return nextStr  
        


class Solution {
public:
    string countAndSay(int n) {

        string s = "1";
        if(n == 1)
            return s;

        for(int i = 2; i <= n; i ++)
            s = next(s);
        return s;
    }

private:
    string next(const string& s){

        string ret = "";
        int start = 0;
        for(int i = start + 1; i <= s.size(); i ++)
            if(i == s.size() || s[i] != s[start]){
                ret += to_string(i - start) + s[start];
                start = i;
            }
        return ret;
    }
};
