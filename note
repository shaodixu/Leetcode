binary search:

278

class Solution:
    def firstBadVersion(self, n):
        """
        :type n: int
        :rtype: int
        """
        left = 1
        right = n
        
        while left <= right:
            mid = (left + right) //2
            if isBadVersion(mid) is True:
                right = mid-1
            elif isBadVersion(mid) is False:
                left = mid + 1
        
        return left 



bit operation:

only three operation: &(and), |(or), ^(xor)
a:101 -5
b:110 -6

a&b = 100
a|b = 111
a^b = 011     if two things are different, it is 1, otherwise 0.
